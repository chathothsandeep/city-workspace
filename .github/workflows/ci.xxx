name: Build & Deploy Full Stack

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend/**'
      - 'apps/dashboard/**'
      - '.github/workflows/ci.yaml'

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'ap-south-1' }}
  ECR_REPOSITORY_BACKEND: ${{ vars.ECR_REPOSITORY_BACKEND }}
  ECR_REPOSITORY_DASHBOARD: ${{ vars.ECR_REPOSITORY_DASHBOARD }}
  EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}
  K8S_NAMESPACE: ${{ vars.K8S_NAMESPACE || 'default' }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build Backend Image
        working-directory: apps/backend
        run: |
          docker build \
            --tag ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }} \
            --build-arg NODE_ENV=production \
            .

      - name: Build Dashboard Image
        working-directory: apps/dashboard
        run: |
          docker build \
            --tag ${{ env.ECR_REPOSITORY_DASHBOARD }}:${{ github.sha }} \
            --build-arg API_BASE_URL=/api/v1 \
            .

  push:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/ecr-login@v1

      - name: Push Backend Image
        run: |
          docker push ${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}

      - name: Push Dashboard Image
        run: |
          docker push ${{ env.ECR_REPOSITORY_DASHBOARD }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: push
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: aws/setup-kubectl@v3

      - name: Configure kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --name ${{ env.EKS_CLUSTER_NAME }} \
            --region ${{ env.AWS_REGION }}

      - name: Apply Backend K8s Config (with envsubst)
        working-directory: apps/backend/k8s
        env:
          ECR_REPOSITORY_BACKEND: ${{ env.ECR_REPOSITORY_BACKEND }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          envsubst < backend.yaml | kubectl apply -n ${{ env.K8S_NAMESPACE }} -f -
          kubectl rollout status deployment/backend -n ${{ env.K8S_NAMESPACE }}

      - name: Apply Dashboard K8s Config (with envsubst)
        working-directory: apps/dashboard/k8s
        env:
          ECR_REPOSITORY_DASHBOARD: ${{ env.ECR_REPOSITORY_DASHBOARD }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          envsubst < dashboard.yaml | kubectl apply -n ${{ env.K8S_NAMESPACE }} -f -
          kubectl rollout status deployment/dashboard -n ${{ env.K8S_NAMESPACE }}

          echo "Dashboard URL will be available at:"
          echo "http://$(kubectl get svc dashboard-service \
            -n ${{ env.K8S_NAMESPACE }} \
            -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"

      - name: Check Pod Status
        run: |
          kubectl get pods -n ${{ env.K8S_NAMESPACE }}
